# -*- coding: utf-8 -*-

"""
pagarmeapisdk

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from pagarmeapisdk.api_helper import APIHelper


class CreateOrderItemRequest(object):

    """Implementation of the 'CreateOrderItemRequest' model.

    Request for creating an order item

    Attributes:
        amount (int): Amount
        description (str): Description
        quantity (int): Quantity
        category (str): Category
        code (str): The item code passed by the client

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "amount": 'amount',
        "description": 'description',
        "quantity": 'quantity',
        "category": 'category',
        "code": 'code'
    }

    _optionals = [
        'code',
    ]

    def __init__(self,
                 amount=None,
                 description=None,
                 quantity=None,
                 category=None,
                 code=APIHelper.SKIP):
        """Constructor for the CreateOrderItemRequest class"""

        # Initialize members of the class
        self.amount = amount 
        self.description = description 
        self.quantity = quantity 
        self.category = category 
        if code is not APIHelper.SKIP:
            self.code = code 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        amount = dictionary.get("amount") if dictionary.get("amount") else None
        description = dictionary.get("description") if dictionary.get("description") else None
        quantity = dictionary.get("quantity") if dictionary.get("quantity") else None
        category = dictionary.get("category") if dictionary.get("category") else None
        code = dictionary.get("code") if dictionary.get("code") else APIHelper.SKIP
        # Return an object of this model
        return cls(amount,
                   description,
                   quantity,
                   category,
                   code)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'amount={self.amount!r}, '
                f'description={self.description!r}, '
                f'quantity={self.quantity!r}, '
                f'category={self.category!r}, '
                f'code={(self.code if hasattr(self, "code") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'amount={self.amount!s}, '
                f'description={self.description!s}, '
                f'quantity={self.quantity!s}, '
                f'category={self.category!s}, '
                f'code={(self.code if hasattr(self, "code") else None)!s})')
