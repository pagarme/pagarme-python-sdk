# -*- coding: utf-8 -*-

"""
pagarmeapisdk

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class CreateBankTransferPaymentRequest(object):

    """Implementation of the 'CreateBankTransferPaymentRequest' model.

    Request for creating a bank transfer payment

    Attributes:
        bank (str): Bank
        retries (int): Number of retries

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "bank": 'bank',
        "retries": 'retries'
    }

    def __init__(self,
                 bank=None,
                 retries=None):
        """Constructor for the CreateBankTransferPaymentRequest class"""

        # Initialize members of the class
        self.bank = bank 
        self.retries = retries 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        bank = dictionary.get("bank") if dictionary.get("bank") else None
        retries = dictionary.get("retries") if dictionary.get("retries") else None
        # Return an object of this model
        return cls(bank,
                   retries)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'bank={self.bank!r}, '
                f'retries={self.retries!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'bank={self.bank!s}, '
                f'retries={self.retries!s})')
