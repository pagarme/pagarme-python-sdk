# -*- coding: utf-8 -*-

"""
pagarmeapisdk

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from pagarmeapisdk.api_helper import APIHelper


class CreateTransfer(object):

    """Implementation of the 'CreateTransfer' model.

    Attributes:
        amount (int): The model property of type int.
        source_id (str): The model property of type str.
        target_id (str): The model property of type str.
        metadata (List[str]): The model property of type List[str].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "amount": 'amount',
        "source_id": 'source_id',
        "target_id": 'target_id',
        "metadata": 'metadata'
    }

    _optionals = [
        'metadata',
    ]

    def __init__(self,
                 amount=None,
                 source_id=None,
                 target_id=None,
                 metadata=APIHelper.SKIP):
        """Constructor for the CreateTransfer class"""

        # Initialize members of the class
        self.amount = amount 
        self.source_id = source_id 
        self.target_id = target_id 
        if metadata is not APIHelper.SKIP:
            self.metadata = metadata 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        amount = dictionary.get("amount") if dictionary.get("amount") else None
        source_id = dictionary.get("source_id") if dictionary.get("source_id") else None
        target_id = dictionary.get("target_id") if dictionary.get("target_id") else None
        metadata = dictionary.get("metadata") if dictionary.get("metadata") else APIHelper.SKIP
        # Return an object of this model
        return cls(amount,
                   source_id,
                   target_id,
                   metadata)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'amount={self.amount!r}, '
                f'source_id={self.source_id!r}, '
                f'target_id={self.target_id!r}, '
                f'metadata={(self.metadata if hasattr(self, "metadata") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'amount={self.amount!s}, '
                f'source_id={self.source_id!s}, '
                f'target_id={self.target_id!s}, '
                f'metadata={(self.metadata if hasattr(self, "metadata") else None)!s})')
