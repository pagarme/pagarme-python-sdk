# -*- coding: utf-8 -*-

"""
pagarmeapisdk

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from pagarmeapisdk.api_helper import APIHelper
from pagarmeapisdk.models.get_customer_response import GetCustomerResponse


class GetCheckoutPaymentSettingsResponse(object):

    """Implementation of the 'GetCheckoutPaymentSettingsResponse' model.

    Checkout Payment Settings Response

    Attributes:
        success_url (str): Success Url
        payment_url (str): Payment Url
        accepted_payment_methods (List[str]): Accepted Payment Methods
        status (str): Status
        customer (GetCustomerResponse): Customer
        amount (int): Payment amount
        default_payment_method (str): Default Payment Method
        gateway_affiliation_id (str): Gateway Affiliation Id

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "success_url": 'success_url',
        "payment_url": 'payment_url',
        "accepted_payment_methods": 'accepted_payment_methods',
        "status": 'status',
        "customer": 'customer',
        "amount": 'amount',
        "default_payment_method": 'default_payment_method',
        "gateway_affiliation_id": 'gateway_affiliation_id'
    }

    _optionals = [
        'success_url',
        'payment_url',
        'accepted_payment_methods',
        'status',
        'customer',
        'amount',
        'default_payment_method',
        'gateway_affiliation_id',
    ]

    _nullables = [
        'success_url',
        'payment_url',
        'accepted_payment_methods',
        'status',
        'customer',
        'amount',
        'default_payment_method',
        'gateway_affiliation_id',
    ]

    def __init__(self,
                 success_url=APIHelper.SKIP,
                 payment_url=APIHelper.SKIP,
                 accepted_payment_methods=APIHelper.SKIP,
                 status=APIHelper.SKIP,
                 customer=APIHelper.SKIP,
                 amount=APIHelper.SKIP,
                 default_payment_method=APIHelper.SKIP,
                 gateway_affiliation_id=APIHelper.SKIP):
        """Constructor for the GetCheckoutPaymentSettingsResponse class"""

        # Initialize members of the class
        if success_url is not APIHelper.SKIP:
            self.success_url = success_url 
        if payment_url is not APIHelper.SKIP:
            self.payment_url = payment_url 
        if accepted_payment_methods is not APIHelper.SKIP:
            self.accepted_payment_methods = accepted_payment_methods 
        if status is not APIHelper.SKIP:
            self.status = status 
        if customer is not APIHelper.SKIP:
            self.customer = customer 
        if amount is not APIHelper.SKIP:
            self.amount = amount 
        if default_payment_method is not APIHelper.SKIP:
            self.default_payment_method = default_payment_method 
        if gateway_affiliation_id is not APIHelper.SKIP:
            self.gateway_affiliation_id = gateway_affiliation_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        success_url = dictionary.get("success_url") if "success_url" in dictionary.keys() else APIHelper.SKIP
        payment_url = dictionary.get("payment_url") if "payment_url" in dictionary.keys() else APIHelper.SKIP
        accepted_payment_methods = dictionary.get("accepted_payment_methods") if "accepted_payment_methods" in dictionary.keys() else APIHelper.SKIP
        status = dictionary.get("status") if "status" in dictionary.keys() else APIHelper.SKIP
        if 'customer' in dictionary.keys():
            customer = GetCustomerResponse.from_dictionary(dictionary.get('customer')) if dictionary.get('customer') else None
        else:
            customer = APIHelper.SKIP
        amount = dictionary.get("amount") if "amount" in dictionary.keys() else APIHelper.SKIP
        default_payment_method = dictionary.get("default_payment_method") if "default_payment_method" in dictionary.keys() else APIHelper.SKIP
        gateway_affiliation_id = dictionary.get("gateway_affiliation_id") if "gateway_affiliation_id" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(success_url,
                   payment_url,
                   accepted_payment_methods,
                   status,
                   customer,
                   amount,
                   default_payment_method,
                   gateway_affiliation_id)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'success_url={(self.success_url if hasattr(self, "success_url") else None)!r}, '
                f'payment_url={(self.payment_url if hasattr(self, "payment_url") else None)!r}, '
                f'accepted_payment_methods={(self.accepted_payment_methods if hasattr(self, "accepted_payment_methods") else None)!r}, '
                f'status={(self.status if hasattr(self, "status") else None)!r}, '
                f'customer={(self.customer if hasattr(self, "customer") else None)!r}, '
                f'amount={(self.amount if hasattr(self, "amount") else None)!r}, '
                f'default_payment_method={(self.default_payment_method if hasattr(self, "default_payment_method") else None)!r}, '
                f'gateway_affiliation_id={(self.gateway_affiliation_id if hasattr(self, "gateway_affiliation_id") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'success_url={(self.success_url if hasattr(self, "success_url") else None)!s}, '
                f'payment_url={(self.payment_url if hasattr(self, "payment_url") else None)!s}, '
                f'accepted_payment_methods={(self.accepted_payment_methods if hasattr(self, "accepted_payment_methods") else None)!s}, '
                f'status={(self.status if hasattr(self, "status") else None)!s}, '
                f'customer={(self.customer if hasattr(self, "customer") else None)!s}, '
                f'amount={(self.amount if hasattr(self, "amount") else None)!s}, '
                f'default_payment_method={(self.default_payment_method if hasattr(self, "default_payment_method") else None)!s}, '
                f'gateway_affiliation_id={(self.gateway_affiliation_id if hasattr(self, "gateway_affiliation_id") else None)!s})')
