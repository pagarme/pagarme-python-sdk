# -*- coding: utf-8 -*-

"""
pagarmeapisdk

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from pagarmeapisdk.api_helper import APIHelper
from pagarmeapisdk.models.get_phone_response import GetPhoneResponse


class GetPhonesResponse(object):

    """Implementation of the 'GetPhonesResponse' model.

    Attributes:
        home_phone (GetPhoneResponse): The model property of type
            GetPhoneResponse.
        mobile_phone (GetPhoneResponse): The model property of type
            GetPhoneResponse.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "home_phone": 'home_phone',
        "mobile_phone": 'mobile_phone'
    }

    _optionals = [
        'home_phone',
        'mobile_phone',
    ]

    _nullables = [
        'home_phone',
        'mobile_phone',
    ]

    def __init__(self,
                 home_phone=APIHelper.SKIP,
                 mobile_phone=APIHelper.SKIP):
        """Constructor for the GetPhonesResponse class"""

        # Initialize members of the class
        if home_phone is not APIHelper.SKIP:
            self.home_phone = home_phone 
        if mobile_phone is not APIHelper.SKIP:
            self.mobile_phone = mobile_phone 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        if 'home_phone' in dictionary.keys():
            home_phone = GetPhoneResponse.from_dictionary(dictionary.get('home_phone')) if dictionary.get('home_phone') else None
        else:
            home_phone = APIHelper.SKIP
        if 'mobile_phone' in dictionary.keys():
            mobile_phone = GetPhoneResponse.from_dictionary(dictionary.get('mobile_phone')) if dictionary.get('mobile_phone') else None
        else:
            mobile_phone = APIHelper.SKIP
        # Return an object of this model
        return cls(home_phone,
                   mobile_phone)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'home_phone={(self.home_phone if hasattr(self, "home_phone") else None)!r}, '
                f'mobile_phone={(self.mobile_phone if hasattr(self, "mobile_phone") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'home_phone={(self.home_phone if hasattr(self, "home_phone") else None)!s}, '
                f'mobile_phone={(self.mobile_phone if hasattr(self, "mobile_phone") else None)!s})')
